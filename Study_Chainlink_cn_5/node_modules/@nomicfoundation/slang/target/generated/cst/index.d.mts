import * as generated from "../../../wasm/index.mjs";
export declare const NonterminalKind: typeof generated.cst.NonterminalKind;
export type NonterminalKind = generated.cst.NonterminalKind;
export declare const TerminalKind: typeof generated.cst.TerminalKind;
export type TerminalKind = generated.cst.TerminalKind;
export declare const TerminalKindExtensions: typeof generated.cst.TerminalKindExtensions;
export type TerminalKindExtensions = generated.cst.TerminalKindExtensions;
export declare const EdgeLabel: typeof generated.cst.EdgeLabel;
export type EdgeLabel = generated.cst.EdgeLabel;
export type Node = generated.cst.Node;
export declare const NodeVariant: typeof generated.cst.NodeVariant;
export type NodeVariant = generated.cst.NodeVariant;
export declare const NonterminalNode: typeof generated.cst.NonterminalNode;
export type NonterminalNode = generated.cst.NonterminalNode;
export declare const TerminalNode: typeof generated.cst.TerminalNode;
export type TerminalNode = generated.cst.TerminalNode;
export type Edge = generated.cst.Edge;
export declare const Cursor: typeof generated.cst.Cursor;
export type Cursor = generated.cst.Cursor;
export declare const Query: typeof generated.cst.Query;
export type Query = generated.cst.Query;
export type QueryError = generated.cst.QueryError;
export type QueryMatch = generated.cst.QueryMatch;
export declare const QueryMatchIterator: typeof generated.cst.QueryMatchIterator;
export type QueryMatchIterator = generated.cst.QueryMatchIterator;
export type TextIndex = generated.cst.TextIndex;
export type TextRange = generated.cst.TextRange;
export declare function assertIsNonterminalNode(node: unknown, kind?: NonterminalKind, text?: string): asserts node is NonterminalNode;
export declare function assertIsTerminalNode(node: unknown, kind?: TerminalKind, text?: string): asserts node is TerminalNode;
